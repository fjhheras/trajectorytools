# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test and coverage

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: ['*']

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install .
    - name: Check format with black 
      run: |
        black -l 79 --check .
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors, deprecations or undefined names
        # our line length is 79 (72 for docstrings), and we are strict (stop) if above 87
        # Goal: flake8 trajectorytools --extend-ignore=E203,W503,C0330
        flake8 trajectorytools --max-line-length 87 --extend-ignore=E203,W503,F401,F403,E741 --show-source --statistics
        #
        # exit-zero treats all errors as warnings.
        # ignoring when clashing with black:
        # - W503 line break before binary operator
        # - E203 whitespace before ':'
        # - C0330 Wrong hanging indentation before block
        flake8 . --count --exit-zero --max-complexity=10 --statistics --ignore=E203,W503,C0330
    - name: Generate coverage report
      run: |
        pip install pytest
        pip install pytest-cov
        pytest --cov=trajectorytools --cov-report=xml tests/
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
